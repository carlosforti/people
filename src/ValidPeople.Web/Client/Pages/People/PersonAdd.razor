@page "/people/new"
@using ValidPeople.Web.Shared
@using ValidPeople.Web.Shared.People
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Add new Person</h3>

<PersonForm Person="person"
            Errors="errors"
            ShowNotification="showNotification"
            Submit="Submit"
            Reset="Reset"
            Resource="resource"/>

@code {
    private bool showNotification;
    private IEnumerable<ErrorViewModel> errors;
    private PersonViewModel person = CreatePerson();
    private Resource resource = new Resource
    {
        Hobbies = new List<EnumerationViewModel>(),
        ParentRelations = new List<EnumerationViewModel>(),
        EducationalLevels = new List<EnumerationViewModel>()
    };

    private static PersonViewModel CreatePerson()
    {
        return new PersonViewModel
        {
            Name = new NameViewModel(),
            Cpf = new CpfViewModel(),
            Parents = new List<ParentViewModel>
        {
                new ParentViewModel
                {
                    Name = new NameViewModel()
                }
            }
        };
    }

    protected override async Task OnInitializedAsync()
    {
        resource = await Http.GetFromJsonAsync<Resource>("/api/resources");
    }

    private void Reset()
    {
        person = CreatePerson();
    }

    private async Task Submit()
    {
        var response = await Http.PostAsJsonAsync("/api/people", person);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/people");
            return;
        }

        var errors = await response.Content.ReadFromJsonAsync<IEnumerable<ErrorViewModel>>();
        showNotification = true;
    }
}
